(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{388:function(e,t,a){e.exports=a.p+"assets/img/menuconfig_1.2082158c.png"},389:function(e,t,a){e.exports=a.p+"assets/img/opkglist_vermagic.7a3bb4a1.png"},403:function(e,t,a){"use strict";a.r(t);var r=a(54),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"手动编译openwrt19-07并打nat补丁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手动编译openwrt19-07并打nat补丁"}},[e._v("#")]),e._v(" 手动编译OpenWRT19.07并打NAT补丁")]),e._v(" "),r("h2",{attrs:{id:"_0x0-环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x0-环境"}},[e._v("#")]),e._v(" 0x0 环境")]),e._v(" "),r("p",[e._v("使用了一台x86_64的headless的Ubuntu服务器作为实验设备。该服务器由18.04滚至20.04而来，但应该不影响后续环境。")]),e._v(" "),r("p",[e._v("目标设备为"),r("a",{attrs:{href:"https://openwrt.org/toh/hwdata/linksys/linksys_wrt32x_v1_venom",target:"_blank",rel:"noopener noreferrer"}},[e._v("WRT32X"),r("OutboundLink")],1),e._v("，是工坊使用那台路由器。")]),e._v(" "),r("h2",{attrs:{id:"_0x1-安装依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-安装依赖"}},[e._v("#")]),e._v(" 0x1 安装依赖")]),e._v(" "),r("p",[e._v("OpenWRT的文档可谓是非常丰富（英文的）。")]),e._v(" "),r("p",[e._v("首先，去看"),r("a",{attrs:{href:"https://openwrt.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenWRT官网"),r("OutboundLink")],1),e._v("。这是所有信息的来源。")]),e._v(" "),r("p",[e._v("左边栏里看一看，嗯，"),r("code",[e._v("Documentation => Developer guide")]),e._v("，直接点进去。")]),e._v(" "),r("p",[e._v("立马就看到了"),r("a",{attrs:{href:"https://openwrt.org/docs/guide-developer/quickstart-build-images",target:"_blank",rel:"noopener noreferrer"}},[e._v("Build Images Quickstart"),r("OutboundLink")],1),e._v("点进去。")]),e._v(" "),r("p",[e._v("从"),r("code",[e._v("1. Prerequisites")]),e._v("开始过文档。")]),e._v(" "),r("p",[e._v("按照官网"),r("a",{attrs:{href:"https://openwrt.org/docs/guide-developer/build-system/install-buildsystem#examples_of_package_installations",target:"_blank",rel:"noopener noreferrer"}},[e._v("examples of package installations"),r("OutboundLink")],1),e._v("安装依赖")]),e._v(" "),r("p",[e._v("首先在apt前通通")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo apt update\n")])])]),r("p",[e._v("更新软件列表。")]),e._v(" "),r("p",[e._v("文档里写了Ubuntu对应包的安装命令：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo apt install build-essential ccache ecj fastjar file g++ gawk \\\ngettext git java-propose-classpath libelf-dev libncurses5-dev \\\nlibncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \\\npython3-distutils python3-setuptools rsync subversion swig time \\\nxsltproc zlib1g-dev \n")])])]),r("p",[e._v("运行即可。")]),e._v(" "),r("p",[r("code",[e._v("1.3")]),e._v("中的内容忽略即可，意思是不要使用root权限执行。")]),e._v(" "),r("p",[e._v("然后获取源码：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git clone https://git.openwrt.org/openwrt/openwrt.git\n")])])]),r("p",[e._v("cd进去"),r("code",[e._v("cd openwrt")])]),e._v(" "),r("p",[r("strong",[e._v("以下命令均在这个目录下执行")])]),e._v(" "),r("p",[e._v("我们要编译当前最新的发布版。")]),e._v(" "),r("h5",{attrs:{id:"q-为什么要编译最新发布版"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么要编译最新发布版"}},[e._v("#")]),e._v(" Q: 为什么要编译最新发布版")]),e._v(" "),r("ul",[r("li",[e._v("opkg软件源只有各大发布版")]),e._v(" "),r("li",[e._v("只有内核配置和官方一致才能使用在线软件源")]),e._v(" "),r("li",[e._v("发布版“稳定性可保障”“问题可溯源”")])]),e._v(" "),r("p",[e._v("切换HEAD到某个发布版。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git checkout v19.07.7\n")])])]),r("p",[e._v("然后更新feeds：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("./scripts/feeds update -a\n./scripts/feeds install -a\n")])])]),r("h2",{attrs:{id:"_0x2-配置目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x2-配置目标"}},[e._v("#")]),e._v(" 0x2 配置目标")]),e._v(" "),r("p",[e._v("接下来配置编译目标。为了和官方版本保持相同的构建参数，需要从官方build bot那里拿到对应的"),r("code",[e._v(".config")]),e._v("。"),r("strong",[e._v("从这里开始与官方教程不同，这些内容为增补官方教程")])]),e._v(" "),r("p",[e._v("对于这块板子，文件url是"),r("code",[e._v("https://downloads.openwrt.org/releases/19.07.7/targets/mvebu/cortexa9/config.buildinfo")]),e._v("。它在固件下载目录下。找到它的方法很简单：")]),e._v(" "),r("ol",[r("li",[e._v("去Download页找到"),r("a",{attrs:{href:"https://openwrt.org/toh/views/toh_fwdownload",target:"_blank",rel:"noopener noreferrer"}},[e._v("ToH"),r("OutboundLink")],1),e._v("，在里面找到设备")]),e._v(" "),r("li",[e._v("复制固件链接，如"),r("code",[e._v("http://downloads.openwrt.org/releases/19.07.7/targets/mvebu/cortexa9/openwrt-19.07.7-mvebu-cortexa9-linksys_wrt32x-squashfs-factory.img")])]),e._v(" "),r("li",[e._v("删除最后的文件名后访问"),r("code",[e._v("http://downloads.openwrt.org/releases/19.07.7/targets/mvebu/cortexa9/")])]),e._v(" "),r("li",[e._v("页面最下方即可找到"),r("code",[e._v("config.buildinfo")])])]),e._v(" "),r("p",[e._v("下载该文件并命名为"),r("code",[e._v(".config")]),e._v("：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("curl https://downloads.openwrt.org/releases/19.07.7/targets/mvebu/cortexa9/config.buildinfo -o .config\n")])])]),r("p",[e._v("下载到的"),r("code",[e._v(".config")]),e._v("是最小化的，需要将其展开：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("make defconfig\n")])])]),r("p",[e._v("接下来再次跟随官方教程，筛选编译目标。")]),e._v(" "),r("h4",{attrs:{id:"q-为什么要下载这个文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么要下载这个文件"}},[e._v("#")]),e._v(" Q: 为什么要下载这个文件")]),e._v(" "),r("ol",[r("li",[e._v("不下载这个，直接编译，需要手动配置各种包，比如默认情况下luci都不会包含进去")]),e._v(" "),r("li",[e._v("为了不和在线软件源产生冲突")]),e._v(" "),r("li",[e._v("保证内核选项与官方一致，才能使用官方源下载内核相关的包")])]),e._v(" "),r("p",[e._v("现在从build bot下载的配置文件会编译当前架构的所有设备，我们不需要所以重新只选择我们要的设备：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("make menuconfig\n")])])]),r("p",[r("img",{attrs:{src:a(388),alt:"menuconfig1"}})]),e._v(" "),r("p",[e._v("进去选择WRT32X。")]),e._v(" "),r("p",[e._v("方向键选择"),r("code",[e._v("Save")]),e._v("回车保存。再选择"),r("code",[e._v("Exit")]),e._v("退出。")]),e._v(" "),r("p",[e._v("此时源码的配置就完成了。")]),e._v(" "),r("h2",{attrs:{id:"_0x3-首次编译"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x3-首次编译"}},[e._v("#")]),e._v(" 0x3 首次编译")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("make -j20\n")])])]),r("p",[e._v("我CPU有20个线程核心。"),r("code",[e._v("-j")]),e._v("后面的数值按需修改。")]),e._v(" "),r("p",[e._v("实际建议开个screen再编译，避免中途需要断开连接的问题：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("screen -S make_openwrt\n")])])]),r("p",[e._v("然后在screen里执行make。想撇后台可以摁"),r("code",[e._v("CTRL + A + D")]),e._v("去detach。再次来的时候"),r("code",[e._v("screen -r make_openwrt")]),e._v("即可。")]),e._v(" "),r("h2",{attrs:{id:"_0x4-检查-vermagic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x4-检查-vermagic"}},[e._v("#")]),e._v(" 0x4 检查 vermagic")]),e._v(" "),r("p",[e._v("只有使用"),r("strong",[e._v("和官方一致")]),e._v("的编译配置才能安全的使用在线软件源。opkg因此拥有这么一套检查机制。如果vermagic值不匹配的话就无法以后使用opkg在线安装部分内核模块的包。")]),e._v(" "),r("blockquote",[r("p",[e._v("vermagic is that 45ed73a630a4bec3328fc33ca1c2e1c2\nand is a hash calculated from")]),e._v(" "),r("ul",[r("li",[e._v("all compilation options related to kernel, and")]),e._v(" "),r("li",[e._v("names of all kernel modules enabled in the kernel compilation .config (either =y or =m)")])])]),e._v(" "),r("p",[e._v("参阅"),r("a",{attrs:{href:"https://forum.openwrt.org/t/cannot-use-released-kernel-module-for-compile-openwrt/50075/12",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("首先获取本地编译的vermagic")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cat ./build_dir/target-*/linux-*/linux-*/.vermagic\n")])])]),r("p",[e._v("会打引出一串md5，即为当前编译得到的vermagic")]),e._v(" "),r("p",[e._v("再去openwrt官方软件源寻找官方的vermagic。操作方法：")]),e._v(" "),r("ol",[r("li",[e._v("去上文提到过的固件url目录那里（自己按需修改）"),r("code",[e._v("https://downloads.openwrt.org/releases/19.07.7/targets/mvebu/cortexa9")])]),e._v(" "),r("li",[e._v("页面下方有"),r("code",[e._v("packages")]),e._v("目录，点进去")]),e._v(" "),r("li",[e._v("有一个"),r("code",[e._v("Packages")]),e._v("文件，打开它。")])]),e._v(" "),r("p",[e._v("这个文件就是软件包列表。如果浏览器直接打开了这个文件，那么就搜索"),r("code",[e._v("kernel")]),e._v("。如果浏览器下载了这个文件，那就本地用工具，搜索"),r("code",[e._v("kernel")]),e._v("：")]),e._v(" "),r("p",[r("img",{attrs:{src:a(389),alt:"opkglist vermagic"}})]),e._v(" "),r("p",[e._v("任何一个依赖kernel的包都可以说明问题。划线处即为官方vermagic。")]),e._v(" "),r("p",[e._v("现在对比本地编译得到的vermagic和官方值。如果一致，那就继续。不一致请检查上述步骤有无遗漏。")]),e._v(" "),r("p",[e._v("现在已经成功编译得到了和官方镜像配置一致的发布版。")]),e._v(" "),r("h2",{attrs:{id:"_0x5-nat补丁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x5-nat补丁"}},[e._v("#")]),e._v(" 0x5 NAT补丁")]),e._v(" "),r("p",[e._v("这里的NAT补丁特指"),r("a",{attrs:{href:"https://github.com/Chion82/netfilter-full-cone-nat",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chion82"),r("OutboundLink")],1),e._v("与"),r("a",{attrs:{href:"https://github.com/LGA1150/openwrt-fullconenat",target:"_blank",rel:"noopener noreferrer"}},[e._v("LGA1150"),r("OutboundLink")],1),e._v("的FullCone补丁，以及相关其它补丁。")]),e._v(" "),r("h5",{attrs:{id:"q-为什么要这个补丁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么要这个补丁"}},[e._v("#")]),e._v(" Q: 为什么要这个补丁")]),e._v(" "),r("ul",[r("li",[e._v("我们是Zerotier等内网穿透用户群体。一个FullCone NAT能够带来非常舒适的直连体验")])]),e._v(" "),r("p",[e._v("当然，从masquerade换到fullcone理论会导致一些安全性问题。也不排除一些鲁棒不佳的socket服务爆炸。")]),e._v(" "),r("h3",{attrs:{id:"概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[e._v("#")]),e._v(" 概览")]),e._v(" "),r("p",[e._v("可以找到的类似于开始页面的地址是： https://github.com/LGA1150/openwrt-fullconenat")]),e._v(" "),r("p",[e._v("通过阅读README可知，一共需要patch三个地方：")]),e._v(" "),r("ul",[r("li",[e._v("一个新的package作为iptables扩展")]),e._v(" "),r("li",[e._v("一个luci的patch，用于图形化配置nat类型")]),e._v(" "),r("li",[e._v("一个内核patch")])]),e._v(" "),r("p",[e._v("如果我们要对内核进行patch，那就必须得自己编译整个系统镜像。其它两个都可以作为扩展进行部分编译。但是既然都要编译了不如全部编译一遍。")]),e._v(" "),r("h3",{attrs:{id:"打内核补丁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打内核补丁"}},[e._v("#")]),e._v(" 打内核补丁")]),e._v(" "),r("p",[e._v("注：当前该补丁适用于4.14内核")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("wget -P target/linux/generic/hack-4.14/ https://raw.githubusercontent.com/coolsnowwolf/lede/master/target/linux/generic/hack-4.14/952-net-conntrack-events-support-multiple-registrant.patch\n")])])]),r("p",[e._v("注：适用于OpenWRT21的5.4内核补丁位于 "),r("code",[e._v("https://github.com/coolsnowwolf/lede/raw/master/target/linux/generic/hack-5.4/952-net-conntrack-events-support-multiple-registrant.patch")])]),e._v(" "),r("p",[e._v("使用命令：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("wget -P target/linux/generic/hack-5.4/ https://github.com/coolsnowwolf/lede/raw/master/target/linux/generic/hack-5.4/952-net-conntrack-events-support-multiple-registrant.patch\n")])])]),r("h3",{attrs:{id:"添加fullconenat包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加fullconenat包"}},[e._v("#")]),e._v(" 添加fullconenat包")]),e._v(" "),r("p",[e._v("下载源码。这一步直接将源码放进了代码树中。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git clone -b master --single-branch https://github.com/LGA1150/openwrt-fullconenat package/fullconenat\n")])])]),r("p",[e._v("配置编译选项")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("make menuconfig\n")])])]),r("p",[e._v("在"),r("code",[e._v("Network -> Firewall -> iptables-mod-fullconenat")]),e._v("这个位置把该选项前面的"),r("code",[e._v("<>")]),e._v("摁两次空格改为"),r("code",[e._v("<*>")]),e._v("，意为直接编译进镜像。")]),e._v(" "),r("p",[e._v("使用方向键选择"),r("code",[e._v("Save")]),e._v("后再选择"),r("code",[e._v("Exit")]),e._v("退出")]),e._v(" "),r("h3",{attrs:{id:"添加luci补丁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加luci补丁"}},[e._v("#")]),e._v(" 添加luci补丁")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("mkdir package/network/config/firewall/patches\nwget -P package/network/config/firewall/patches/ https://github.com/LGA1150/fullconenat-fw3-patch/raw/master/fullconenat.patch\npushd feeds/luci\nwget -O- https://github.com/LGA1150/fullconenat-fw3-patch/raw/master/luci.patch | git apply\npopd\n")])])]),r("h3",{attrs:{id:"绕过vermagic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#绕过vermagic"}},[e._v("#")]),e._v(" 绕过vermagic")]),e._v(" "),r("p",[e._v("对内核动了手脚，vermagic已经变了。为了能够继续使用在线软件源，需要欺骗openwrt。")]),e._v(" "),r("p",[e._v("这一步有风险，但是鉴于只添加了nat补丁而没有动其它配置，也就只能这样。")]),e._v(" "),r("blockquote",[r("p",[e._v("Use at your own risk.")])]),e._v(" "),r("p",[e._v("将之前编译得到的"),r("code",[e._v(".vermagic")]),e._v("复制出来：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cp ./build_dir/target-*/linux-*/linux-*/.vermagic .\n")])])]),r("p",[e._v("修改内核mk中生成vermagic的代码：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sed -i -e 's/^\\(.\\).*vermagic$/\\1cp $(TOPDIR)\\/.vermagic $(LINUX_DIR)\\/.vermagic/' include/kernel-defaults.mk\n")])])]),r("p",[e._v("再次进行编译。")]),e._v(" "),r("p",[e._v("重做"),r("code",[e._v("0x3")]),e._v("和"),r("code",[e._v("0x4")])]),e._v(" "),r("h2",{attrs:{id:"_0x6-完成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x6-完成"}},[e._v("#")]),e._v(" 0x6 完成")]),e._v(" "),r("p",[e._v("编译得到的系统镜像在"),r("code",[e._v("./bin/target/*/*/")])]),e._v(" "),r("h2",{attrs:{id:"_0xf-参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0xf-参考"}},[e._v("#")]),e._v(" 0xf 参考")]),e._v(" "),r("p",[e._v("构建官方一致的镜像： https://openwrt.org/docs/guide-developer/build-system/use-buildsystem#build_system_usage")]),e._v(" "),r("p",[e._v("本地编译的vermagic： https://libremesh.org/development-kernel_vermagic.html")]),e._v(" "),r("p",[e._v("vermagic来源： https://forum.openwrt.org/t/cannot-use-released-kernel-module-for-compile-openwrt/50075/12")]),e._v(" "),r("p",[e._v("bypass vermagic calc: https://oldwiki.archive.openwrt.org/doc/howtobuild/tl-mr3420.build#kmod_compatibility_hack")])])}),[],!1,null,null,null);t.default=s.exports}}]);